package main

import (
	"crypto/rsa"
	"golang.org/x/crypto/pkcs12"
)

func main() {
	var cert []byte
	cert = []byte("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")
	password := "1wZ962RzqNXduQZg"

	keyInterface, _, err := pkcs12.Decode(cert, password)
	if err != nil {
		println(err)
	} else {
		if _, ok := keyInterface.(*rsa.PrivateKey); !ok {
			println("key is not a RSA private key")
		}
	}
	println("Success")

}
